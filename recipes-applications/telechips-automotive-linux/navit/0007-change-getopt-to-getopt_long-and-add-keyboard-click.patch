From 3b461f5ce16a38b19ef16a93e60e4a98fe8f6b07 Mon Sep 17 00:00:00 2001
From: Wily Taekhyun Shin <thshin@telechips.com>
Date: Wed, 28 Aug 2019 15:37:38 +0900
Subject: [PATCH] change getopt to getopt_long and add keyboard click event

---
 navit/start_real.c                        | 28 +++++++++++++++-------
 navit/support/mode_manager/mode_manager.c | 40 ++++++++++++++++++++++---------
 2 files changed, 49 insertions(+), 19 deletions(-)

diff --git a/navit/start_real.c b/navit/start_real.c
index 78e960f..3d2df2e 100644
--- a/navit/start_real.c
+++ b/navit/start_real.c
@@ -54,15 +54,16 @@
 
 int main_argc;
 char * const* main_argv;
+extern int g_appID;
 
 static void print_usage(void) {
     printf("%s",_("navit usage:\n"
                   "navit [options] [configfile]\n"
-                  "\t-c <file>: use <file> as config file, instead of using the default file.\n"
-                  "\t-d <n>: set the global debug output level to <n> (0=error, 1=warning, 2=info, 3=debug).\n"
+                  "\t-c, --config  <file>: use <file> as config file, instead of using the default file.\n"
+                  "\t-d, --debug <n>: set the global debug output level to <n> (0=error, 1=warning, 2=info, 3=debug).\n"
                   "\tSettings from config file will still take effect where they set a higher level.\n"
-                  "\t-h: print this usage info and exit.\n"
-                  "\t-v: print the version and exit.\n"));
+                  "\t-h, --help : print this usage info and exit.\n"
+                  "\t-v, --version : print the version and exit.\n"));
 }
 
 
@@ -74,9 +75,22 @@ int main_real(int argc, char * const* argv) {
     xmlerror *error = NULL;
     char *config_file = NULL, *command=NULL, *startup_file=NULL;
     int opt;
+	int option_index;
     char *cp;
     struct attr navit, conf;
 
+	static const char short_options[] = ":hvc:d:e:s:i:";
+	static const struct option long_options[] = {
+		{"help", 0, 0, 'h'},
+		{"version", 1, 0, 'v'},
+		{"config", 1, 0, 'c'},
+		{"debug", 1, 0, 'd'},
+		{"command", 1, 0, 'e'},
+		{"startup", 1, 0, 's'},
+		{"id", 1, 0, 'i'},
+		{0, 0, 0, 0}
+	};
+
     GList *list = NULL, *li;
     main_argc=argc;
     main_argv=argv;
@@ -121,7 +135,7 @@ int main_real(int argc, char * const* argv) {
         argc=1;
     if (argc > 1) {
         /* Don't forget to update the manpage if you modify theses options */
-        while((opt = getopt(argc, argv, ":hvc:d:e:s:-i10")) != -1) {
+		while ((opt = getopt_long(argc, argv, short_options, long_options, &option_index)) != -1) {
             switch(opt) {
             case 'h':
                 print_usage();
@@ -144,10 +158,8 @@ int main_real(int argc, char * const* argv) {
             case 's':
                 startup_file=optarg;
                 break;
-			case '-':
 			case 'i':
-			case '1':
-			case '0':
+                g_appID = atoi(optarg);
 				break;
 #ifdef HAVE_GETOPT_H
             case ':':
diff --git a/navit/support/mode_manager/mode_manager.c b/navit/support/mode_manager/mode_manager.c
index 44ff95b..7b65fa2 100644
--- a/navit/support/mode_manager/mode_manager.c
+++ b/navit/support/mode_manager/mode_manager.c
@@ -6,6 +6,7 @@
 #include <math.h>
 
 #include "TCDBusRawAPI.h"
+#include "TCInput.h"
 #include "dbus_msg_define.h"
 
 #include "config.h"
@@ -15,7 +16,7 @@
 
 #include "mode_manager.h"
 
-int _appID = 10;
+int g_appID = 10;
 struct graphics *_graphics = NULL;
 
 static void mode_manager_send_dbus_active_application(int app, dbus_bool_t active);
@@ -28,6 +29,8 @@ static void mode_manager_send_dbus_error_occur(void);
 static void mode_manager_change_mode(const char *mode, int app);
 static void mode_manager_release_resource(int resource, int app);
 
+static void mode_manager_on_keyboard_clicked(int key);
+
 static DBusMsgErrorCode mode_manager_on_received_dbus_signal(DBusMessage *message, const char *interface);
 static void mode_manager_launcher_signal_dbus_process(unsigned int id, DBusMessage *message);
 static void mode_manager_mode_manager_signal_dbus_process(unsigned int id, DBusMessage *message);
@@ -50,7 +53,7 @@ void mode_manager_set_grapchis(struct graphics *gra)
 	if (gra != NULL)
 	{
 		_graphics = gra;
-		mode_manager_send_dbus_active_application(_appID, TRUE);
+		mode_manager_send_dbus_active_application(g_appID, TRUE);
 	}
 }
 
@@ -59,7 +62,7 @@ void mode_manager_request_display(int show)
 	if (show != 0)
 	{
 		// request full screen
-		mode_manager_send_dbus_change_mode(MODE_MANAGER_VIEW, _appID);
+		mode_manager_send_dbus_change_mode(MODE_MANAGER_VIEW, g_appID);
 	}
 	else
 	{
@@ -198,6 +201,7 @@ static int mode_manager_send_dbus_change_mode(const char* mode, int app)
 static void mode_manager_send_dbus_release_resource_done(int resource)
 {
     DBusMessage *message;
+	int app = g_appID;
 
     dbg(lvl_debug, "Enter");
     message = CreateDBusMsgMethodCall(MODEMANAGER_PROCESS_DBUS_NAME,
@@ -205,10 +209,10 @@ static void mode_manager_send_dbus_release_resource_done(int resource)
 										MODEMANAGER_EVENT_INTERFACE,
 										RELEASE_RESOURCE_DONE,
 										DBUS_TYPE_INT32, &resource,
-										DBUS_TYPE_INT32, &_appID,
+										DBUS_TYPE_INT32, &app,
 										DBUS_TYPE_INVALID);
 
-	dbg(lvl_debug, "resource(%x), app(%d)", resource, _appID);
+	dbg(lvl_debug, "resource(%x), app(%d)", resource, app);
 
 	if (message != NULL)
 	{
@@ -227,7 +231,7 @@ static void mode_manager_send_dbus_release_resource_done(int resource)
 static void mode_manager_send_dbus_end_mode(const char *mode)
 {
     DBusMessage *message;
-	int app = _appID;
+	int app = g_appID;
 
     dbg(lvl_debug, "Enter");
     message = CreateDBusMsgMethodCall(MODEMANAGER_PROCESS_DBUS_NAME,
@@ -256,7 +260,7 @@ static void mode_manager_send_dbus_end_mode(const char *mode)
 
 static void mode_manager_send_dbus_error_occur(void)
 {
-	int app = _appID;
+	int app = g_appID;
 	DBusMessage *message;
 
     dbg(lvl_debug, "Enter");
@@ -287,7 +291,7 @@ static void mode_manager_change_mode(const char *mode, int app)
 	{
 		dbg(lvl_debug, "change mode to %s", MODE_MANAGER_VIEW);
 
-		if (app == _appID)
+		if (app == g_appID)
 		{
 			if (_graphics != NULL)
 			{
@@ -297,7 +301,7 @@ static void mode_manager_change_mode(const char *mode, int app)
 			{
 				dbg(lvl_error, "grapchis not initialized");
 			}
-			mode_manager_send_dbus_change_mode(MODE_MANAGER_NAVI_ALARM, _appID);
+			mode_manager_send_dbus_change_mode(MODE_MANAGER_NAVI_ALARM, g_appID);
 		}
 	}
 	else if (strncmp(mode, MODE_MANAGER_HOME, strlen(MODE_MANAGER_HOME)) == 0)
@@ -313,7 +317,7 @@ static void mode_manager_change_mode(const char *mode, int app)
 			{
 				dbg(lvl_error, "grapchis not initialized");
 			}
-			mode_manager_send_dbus_change_mode(MODE_MANAGER_NAVI_ALARM_BG, _appID);
+			mode_manager_send_dbus_change_mode(MODE_MANAGER_NAVI_ALARM_BG, g_appID);
 		}
 	}
 	else if (strncmp(mode, MODE_MANAGER_NAVI_ALARM, strlen(MODE_MANAGER_NAVI_ALARM)) == 0)
@@ -332,7 +336,7 @@ static void mode_manager_change_mode(const char *mode, int app)
 
 static void mode_manager_release_resource(int resource, int app)
 {
-	if (app == _appID)
+	if (app == g_appID)
 	{
 		if (resource & RSC_DISPLAY)
 		{
@@ -347,6 +351,19 @@ static void mode_manager_release_resource(int resource, int app)
 	}
 }
 
+static void mode_manager_on_keyboard_clicked(int key)
+{
+    dbg(lvl_debug, "key(%d)", key);
+	if (key == g_knobKeys[TCKeyNavi])
+	{
+		mode_manager_send_dbus_change_mode(MODE_MANAGER_VIEW, g_appID);
+	}
+	else if (key == g_knobKeys[TCKeyMap])
+	{
+		mode_manager_send_dbus_change_mode(MODE_MANAGER_VIEW, g_appID);
+	}
+}
+
 static DBusMsgErrorCode mode_manager_on_received_dbus_signal(DBusMessage *message, const char *interface)
 {
 	int32_t rsc, app;
@@ -418,6 +435,7 @@ static void mode_manager_launcher_signal_dbus_process(unsigned int id, DBusMessa
 					case SignalLauncherKeyReleased:
 						break;
 					case SignalLauncherKeyClicked:
+						mode_manager_on_keyboard_clicked(value);
 						break;
 					default:
 						dbg(lvl_warning, "unknown signal id(%d)", id);
-- 
1.9.3

