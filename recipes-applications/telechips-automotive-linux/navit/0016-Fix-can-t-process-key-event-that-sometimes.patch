From a5be640fc5fbb6415c52df9b6b2fa3f4ad873cc1 Mon Sep 17 00:00:00 2001
From: Wily Taekhyun Shin <thshin@telechips.com>
Date: Fri, 18 Sep 2020 13:44:47 +0000
Subject: [PATCH] Fix can't process key event that sometimes.

---
 navit/graphics.c                          |  9 ++++++
 navit/graphics.h                          |  1 +
 navit/graphics/qt5/QNavitQuick.cpp        |  3 --
 navit/gui/internal/gui_internal.c         |  9 ------
 navit/gui/internal/gui_internal_command.c |  2 +-
 navit/keys.h                              |  1 -
 navit/support/mode_manager/mode_manager.c | 34 +++++++++++------------
 navit/support/mode_manager/mode_manager.h |  1 -
 8 files changed, 28 insertions(+), 32 deletions(-)

diff --git a/navit/graphics.c b/navit/graphics.c
index 78ed1c4c5..d699a3898 100644
--- a/navit/graphics.c
+++ b/navit/graphics.c
@@ -130,6 +130,7 @@ struct displaylist {
     struct hash_entry hash_entries[HASH_SIZE];
 };
 
+static int _window_mode = graphic_window_mode_hide;
 
 struct displaylist_icon_cache {
     unsigned int seq;
@@ -1808,7 +1809,15 @@ void graphics_draw_polyline_clipped(struct graphics *gra, struct graphics_gc *gc
 void graphics_window_show(struct graphics *this_, int show)
 {
     if (this_->meth.window_show)
+	{
 		this_->meth.window_show(this_->priv, show);
+		_window_mode = show;
+	}
+}
+
+int graphics_get_window_mode(void)
+{
+	return _window_mode;
 }
 
 static int is_inside(struct point *p, struct point_rect *r, int edge) {
diff --git a/navit/graphics.h b/navit/graphics.h
index bb1718726..aeecf4196 100644
--- a/navit/graphics.h
+++ b/navit/graphics.h
@@ -292,6 +292,7 @@ int graphics_hide_native_keyboard (struct graphics *this_, struct graphics_keybo
 void graphics_draw_polygon_clipped(struct graphics *gra, struct graphics_gc *gc, struct point *pin, int count_in);
 void graphics_draw_polyline_clipped(struct graphics *gra, struct graphics_gc *gc, struct point *pa, int count, int *width, int poly);
 void graphics_window_show(struct graphics *this_, int show);
+int graphics_get_window_mode(void);
 
 /* end of prototypes */
 #ifdef __cplusplus
diff --git a/navit/graphics/qt5/QNavitQuick.cpp b/navit/graphics/qt5/QNavitQuick.cpp
index 87d46cd7f..dcd0d2aa5 100644
--- a/navit/graphics/qt5/QNavitQuick.cpp
+++ b/navit/graphics/qt5/QNavitQuick.cpp
@@ -146,9 +146,6 @@ void QNavitQuick::keyPressEvent(QKeyEvent* event) {
     case Qt::Key_PageDown:
         key[0] = NAVIT_KEY_PAGE_DOWN;
         break;
-    case Qt::Key_Home:
-        key[0] = NAVIT_KEY_HOME;
-        break;
     default:
         QString str = event->text();
         if ((str != NULL) && (str.size() != 0)) {
diff --git a/navit/gui/internal/gui_internal.c b/navit/gui/internal/gui_internal.c
index 78daf8bb4..1ca9e2f93 100644
--- a/navit/gui/internal/gui_internal.c
+++ b/navit/gui/internal/gui_internal.c
@@ -2809,12 +2809,6 @@ static void gui_internal_keypress(void *data, char *key) {
             gui_internal_set_click_coord(this, NULL);
             gui_internal_cmd_menu(this, 0, NULL);
             break;
-    	case NAVIT_KEY_BACK:
-			mode_manager_request_to_all_apps();
-			break;
-    	case NAVIT_KEY_HOME:
-			mode_manager_request_to_home();
-			break;
         }
         return;
     }
@@ -2850,9 +2844,6 @@ static void gui_internal_keypress(void *data, char *key) {
         else
             gui_internal_keypress_do(this, key);
         break;
-   	case NAVIT_KEY_HOME:
-		mode_manager_request_to_home();
-		break;
     default:
         gui_internal_keypress_do(this, key);
     }
diff --git a/navit/gui/internal/gui_internal_command.c b/navit/gui/internal/gui_internal_command.c
index 74af235b8..cd6ccd5fc 100644
--- a/navit/gui/internal/gui_internal_command.c
+++ b/navit/gui/internal/gui_internal_command.c
@@ -976,7 +976,7 @@ static void gui_internal_cmd2_back_to_map(struct gui_priv *this, char *function,
         int *valid) {
     gui_internal_prune_menu(this, NULL);
     gui_internal_check_exit(this);
-	mode_manager_request_display(0);
+	mode_manager_request_to_home();
 }
 
 
diff --git a/navit/keys.h b/navit/keys.h
index a61b4b4b5..a47a1bcca 100644
--- a/navit/keys.h
+++ b/navit/keys.h
@@ -13,4 +13,3 @@
 #define NAVIT_KEY_TAB 9 /* TAB */
 #define NAVIT_KEY_PAGE_UP 33
 #define NAVIT_KEY_PAGE_DOWN 34
-#define NAVIT_KEY_HOME 101
diff --git a/navit/support/mode_manager/mode_manager.c b/navit/support/mode_manager/mode_manager.c
index 9511512c1..2bebbfb0a 100644
--- a/navit/support/mode_manager/mode_manager.c
+++ b/navit/support/mode_manager/mode_manager.c
@@ -59,19 +59,6 @@ void mode_manager_set_grapchis(struct graphics *gra)
 	}
 }
 
-void mode_manager_request_display(int display)
-{
-	if (display != 0)
-	{
-		// request full screen
-		mode_manager_send_dbus_change_mode(MODE_MANAGER_VIEW, g_appID);
-	}
-	else
-	{
-		mode_manager_send_dbus_change_mode(MODE_MANAGER_HOME, LAUNCHER_APP_ID);
-	}
-}
-
 void mode_manager_request_to_home(void)
 {
 	if (_mode == graphic_window_mode_full_screen)
@@ -396,14 +383,27 @@ static void mode_manager_release_resource(int resource, int app)
 
 static void mode_manager_on_keyboard_clicked(int key)
 {
+	int window_mode;
     dbg(lvl_debug, "key(%d)", key);
-	if (key == g_knobKeys[TCKeyNavi])
+	window_mode = graphics_get_window_mode();
+	if (window_mode == graphic_window_mode_full_screen)
 	{
-		mode_manager_send_dbus_change_mode(MODE_MANAGER_VIEW, g_appID);
+		if (key == g_knobKeys[TCKeyBack])
+		{
+			mode_manager_request_to_all_apps();
+		}
+		else if (key == g_knobKeys[TCKeyHome])
+		{
+			mode_manager_request_to_home();
+		}
 	}
-	else if (key == g_knobKeys[TCKeyMap])
+	else
 	{
-		mode_manager_send_dbus_change_mode(MODE_MANAGER_VIEW, g_appID);
+		if ((key == g_knobKeys[TCKeyNavi]) ||
+			(key == g_knobKeys[TCKeyMap]))
+		{
+			mode_manager_send_dbus_change_mode(MODE_MANAGER_VIEW, g_appID);
+		}
 	}
 }
 
diff --git a/navit/support/mode_manager/mode_manager.h b/navit/support/mode_manager/mode_manager.h
index e44d3960d..514b1bdac 100644
--- a/navit/support/mode_manager/mode_manager.h
+++ b/navit/support/mode_manager/mode_manager.h
@@ -21,7 +21,6 @@ struct graphics;
 
 int mode_manager_init(int argc, char * const* argv);
 void mode_manager_set_grapchis(struct graphics *gra);
-void mode_manager_request_display(int display);
 void mode_manager_request_to_home(void);
 void mode_manager_request_to_all_apps(void);
 
-- 
2.24.1

